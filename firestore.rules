rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Function to check if the user is anonymous
    function isAnonymous() {
      return request.auth.token.firebase.sign_in_provider == "anonymous";
    }

    // Allow users to read their own data
    match /users/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Allow fetching group workouts if the user is a participant or creator
    match /group_workouts/{workoutId} {
      allow read: if isAuthenticated() && (
        resource.data.creatorId == request.auth.uid ||
          request.auth.uid in resource.data.participants ||
          isAnonymous()
      );
      allow create, update: if isAuthenticated() && (
        resource.data.creatorId == request.auth.uid ||
          request.auth.uid in resource.data.participants
      );
    }

    // Allow invites to be fetched only if the user is authenticated
    match /invites/{inviteId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated();
    }
  }
}
